//Course.js
import React from "react";
import "./Courses.css";
import { Container } from "react-bootstrap";

import Button from "react-bootstrap/Button";
import Col from "react-bootstrap/Col";
import Form from "react-bootstrap/Form";

import Row from "react-bootstrap/Row";
import * as formik from "formik";
import * as yup from "yup";
import axios from "axios";
import { Link, useNavigate } from "react-router-dom";

const Courses = () => {
  const navigate = useNavigate();
  const handleSubmit = async (values, { setSubmitting }) => {
    try {
      const response = await axios.post(
        "http://localhost:3300/createUser",
        values
      );
      console.log("API Response:", response.data);
      navigate("/Signin");
    } catch (error) {
      console.error("API Error:", error);
    } finally {
      setSubmitting(false);
    }
  };
  const { Formik } = formik;

  const schema = yup.object().shape({
    firstName: yup.string().required(),
    lastName: yup.string().required(),
    date: yup.string().required(),
    email: yup
      .string()
      .required()
      .matches(/@/, 'Email must contain "@" symbol'),
    mobileNumber: yup
      .string()
      .required()
      .matches(/^\d{10}$/, "Mobile number must be exactly 10 digits"),
    city: yup.string().required(),
    state: yup.string().required(),
    zip: yup.string().required(),
    userName: yup.string().required(),
    password: yup.string().required(),
  });

  return (
    <div>
      <div className="headbg">
        <Container className="headwrapper1">
          <Row>
            <Col lg={6} className="order-2 order-lg-1">
              <div className="headwrapper">
                <h1 className="mt-5">Tech Career Programs</h1>

                <p className="headpara">
                  <ul>
                    <li className="fs-3 mb-2">100% Job Placement Support.</li>
                    <li className="fs-3 mb-2">
                      Mentors from Top Global Product companies.
                    </li>
                    <li className="fs-3 mb-2">
                      A Portfolio of Real-world Projects.
                    </li>
                    <li className="fs-3 mb-2">
                      Globally Recognized Certification.
                    </li>
                  </ul>
                </p>
                <h3>Live Classes available in English, தமிழ்</h3>
                <div className="clientcount">
                  <Row className="gy-4">
                    <Col className="col-xs-6 col-sm-3 col-lg-3 ">
                      <div>
                        <p className="clientCountNumber1">
                          2000<sup>+</sup>
                        </p>

                        <p className="fs-5 clientCountLetter1">Students</p>
                      </div>
                    </Col>

                    <Col className="col-xs-6 col-sm-3 col-lg-3">
                      <div>
                        <p className="clientCountNumber2">
                          10<sup>+</sup>
                        </p>

                        <p className="fs-5 clientCountLetter2">Courses</p>
                      </div>
                    </Col>

                    <Col className="col-xs-6 col-sm-3 col-lg-3">
                      <div>
                        <p className="clientCountNumber3">
                          30<sup>+</sup>
                        </p>

                        <p className="fs-5 clientCountLetter3">Staffs</p>
                      </div>
                    </Col>

                    <Col className="col-xs-6 col-sm-3 col-lg-3">
                      <div>
                        <p className="clientCountNumber4">
                          30000<sup>+</sup>
                        </p>

                        <p className="fs-5 clientCountLetter4">
                          Students Placed
                        </p>
                      </div>
                    </Col>
                  </Row>
                </div>
              </div>
            </Col>
            <Col lg={6} className="order-1 order-lg-2">
              <div className="registerPage ms-5">
                <Formik
                  className="form"
                  validationSchema={schema}
                  onSubmit={handleSubmit}
                  initialValues={{
                    firstName: "",
                    lastName: "",
                    date: "",
                    email: "",

                    mobileNumber: "",
                    city: "",
                    state: "",
                    zip: "",
                    userName: "",
                    password: "",
                  }}
                >
                  {({
                    handleSubmit,
                    handleChange,
                    values,
                    touched,
                    errors,
                  }) => (
                    <Form noValidate onSubmit={handleSubmit}>
                      <Row>
                        <h1 className="headSign mt-2"> SignUp</h1>
                        <Col>
                          <Form.Group
                            controlId="validationFormik101"
                            className="position-relative"
                          >
                            <Form.Group className="position-relative mb-2">
                              <Form.Label className="firstNameLabel">
                                First Name
                              </Form.Label>
                              <Form.Control
                                type="firstName"
                                required
                                name="firstName"
                                onChange={handleChange}
                                isInvalid={!!errors.firstName}
                                isValid={touched.firstName && !errors.firstName}
                                className="firstName"
                                placeholder="FirstName"
                              />
                            </Form.Group>
                          </Form.Group>
                        </Col>
                        <Col>
                          <Form.Group
                            as={Col}
                            controlId="validationFormik101"
                            className="position-relative"
                          >
                            <Form.Group className="position-relative mb-2">
                              <Form.Label className="lastNameLabel ">
                                Last Name
                              </Form.Label>
                              <Form.Control
                                type="lastName"
                                required
                                name="lastName"
                                onChange={handleChange}
                                value={values.lastName}
                                isInvalid={!!errors.lastName}
                                isValid={touched.lastName && !errors.lastName}
                                className="lastName"
                                placeholder="LastName"
                              />
                            </Form.Group>
                          </Form.Group>
                        </Col>
                      </Row>
                      <Row>
                        <Col>
                          <Form.Group className="position-relative mb-2">
                            <Form.Label className="dateLabel">
                              Date of Birth
                            </Form.Label>
                            <Form.Control
                              type="date"
                              required
                              name="date"
                              value={values.date}
                              onChange={handleChange}
                              isInvalid={!!errors.date}
                              isValid={touched.date && !errors.date}
                              className="date"
                            />
                          </Form.Group>
                        </Col>
                        <Col>
                          <Form.Group className="position-relative mb-2">
                            <Form.Label className="emailLabel">
                              Email
                            </Form.Label>
                            <Form.Control
                              type="email"
                              required
                              name="email"
                              value={values.email}
                              onChange={handleChange}
                              isInvalid={!!errors.email}
                              isValid={touched.email && !errors.email}
                              className="email"
                              placeholder="Email"
                            />
                          </Form.Group>
                        </Col>
                      </Row>
                      <Row>
                        <Col>
                          <Form.Group
                            as={Col}
                            controlId="validationFormik"
                            className="position-relative"
                          >
                            <Form.Label className="mobileNumberLabel mb-2">
                              MobileNumber
                            </Form.Label>
                            <Form.Control
                              type="number"
                              placeholder="Mobilenumber"
                              name="mobileNumber"
                              value={values.mobileNumber}
                              onChange={handleChange}
                              isInvalid={!!errors.mobileNumber}
                              isValid={
                                touched.mobileNumber && !errors.mobileNumber
                              }
                              className="mobileNumber"
                            />
                          </Form.Group>
                        </Col>
                        <Col>
                          <Form.Group
                            as={Col}
                            controlId="validationFormik103"
                            className="position-relative"
                          >
                            <Form.Label className="cityLabel mb-2">
                              City
                            </Form.Label>
                            <Form.Control
                              type="text"
                              placeholder="City"
                              name="city"
                              value={values.city}
                              onChange={handleChange}
                              isValid={touched.city && !errors.city}
                              isInvalid={!!errors.city}
                              className="city"
                            />
                          </Form.Group>
                        </Col>
                      </Row>
                      <Row>
                        <Col>
                          <Form.Group
                            as={Col}
                            controlId="validationFormik104"
                            className="position-relative"
                          >
                            <Form.Label className="stateLabel mb-2">
                              State
                            </Form.Label>
                            <Form.Control
                              type="text"
                              placeholder="State"
                              name="state"
                              value={values.state}
                              onChange={handleChange}
                              isValid={touched.state && !errors.state}
                              isInvalid={!!errors.state}
                              className="state"
                            />
                          </Form.Group>
                        </Col>
                        <Col>
                          <Form.Group
                            as={Col}
                            controlId="validationFormik105"
                            className="position-relative"
                          >
                            <Form.Label className="zipLabel mb-2">
                              Zip
                            </Form.Label>
                            <Form.Control
                              type="number"
                              placeholder="Zip"
                              name="zip"
                              value={values.zip}
                              onChange={handleChange}
                              isInvalid={!!errors.zip}
                              isValid={touched.zip && !errors.zip}
                              className="zip"
                            />
                          </Form.Group>
                        </Col>
                      </Row>
                      <Row>
                        <Col>
                          <Form.Group
                            as={Col}
                            controlId="validationFormik105"
                            className="position-relative"
                          >
                            <Form.Label className="userNameLabel mb-2">
                              UserName
                            </Form.Label>
                            <Form.Control
                              type="text"
                              placeholder="Username"
                              name="userName"
                              value={values.userName}
                              onChange={handleChange}
                              isValid={touched.userName && !errors.userName}
                              isInvalid={!!errors.userName}
                              className="userName"
                            />
                          </Form.Group>
                        </Col>
                        <Col>
                          <Form.Group
                            as={Col}
                            controlId="validationFormik105"
                            className="position-relative"
                          >
                            <Form.Label className="passwordLabel mb-2">
                              Password
                            </Form.Label>
                            <Form.Control
                              type="password"
                              placeholder="Password"
                              name="password"
                              value={values.password}
                              onChange={handleChange}
                              isInvalid={!!errors.password}
                              isValid={touched.password && !errors.password}
                              className="password"
                            />
                          </Form.Group>
                        </Col>
                      </Row>
                      <Button type="submit" className=" registerBtn mt-2">
                        Register
                      </Button>
                      <h5 className="mt-3 text-black">Let's Signin</h5>{" "}
                      <Link to="/Signin" type="submit" className=" ">
                        Signin
                      </Link>{" "}
                    </Form>
                  )}
                </Formik>
              </div>
            </Col>
          </Row>
        </Container>
      </div>
    </div>
  );
};

export default Courses;
//Course.css
/* Head Content */

.headwrapper1 {
  margin-top: 60px;
}

.headbg {
  background-image: url("../img/bg13.jpg");

  width: 100%;
  min-height: 60vh;
  background-color: var(--color-secondary);
  background-size: cover;
  background-position: center;
  position: relative;
  padding: 120px 0 60px 0;
  color: rgba(255, 255, 255, 0.8);
}

/* registerPage */
.headSign {
  color: black;
  font-size: 20px;
}
.invalid-tooltip {
  color: red;
  background-color: white !important;
}

.registerPage {
  box-sizing: border-box;
  width: 100%;
  height: 100%;

  border: 2px solid white;
  border-radius: 5%;
  background-color: white;

  font-family: "Poppins", sans-serif;
  font-family: "Raleway", sans-serif;
}
.registerBtn {
  width: 35%;
}

.firstNameLabel {
  color: black;
  font-size: 14px;
  font-weight: 100px;
  margin-right: 35%;
}
.firstName {
  width: 80%;
  padding: 12px;
  margin-left: 20%;
}

.lastNameLabel {
  color: black;
  font-size: 14px;
  font-weight: 100px;
  margin-right: 75%;
}
.lastName {
  width: 80%;
  padding: 12px;
}

.dateLabel {
  color: black;
  font-size: 14px;
  font-weight: 100px;
  margin-right: 30%;
}
.date {
  width: 80%;
  padding: 12px;
  margin-left: 20%;
}

.emailLabel {
  color: black;
  font-size: 14px;
  font-weight: 100px;
  margin-right: 85%;
}
.email {
  width: 80%;
  padding: 12px;
}
.mobileNumberLabel {
  color: black;
  font-size: 14px;
  font-weight: 100px;
  margin-right: 27%;
}
.mobileNumber {
  width: 80%;
  padding: 12px;
  margin-left: 20%;
}
.mobileError {
  margin-left: 20%;
}

.cityLabel {
  color: black;
  font-size: 14px;
  font-weight: 100px;
  margin-right: 90%;
}
.city {
  width: 80%;
  padding: 12px;
}
.stateLabel {
  color: black;
  font-size: 14px;
  font-weight: 100px;
  margin-right: 45%;
}
.state {
  width: 80%;
  padding: 12px;
  margin-left: 20%;
}

.zipLabel {
  color: black;
  font-size: 14px;
  font-weight: 100px;
  margin-right: 90%;
}
.zip {
  width: 80%;
  padding: 12px;
}
.userNameLabel {
  color: black;
  font-size: 14px;
  font-weight: 100px;
  margin-right: 35%;
}
.userName {
  width: 80%;
  padding: 12px;
  margin-left: 20%;
}
.userNameError {
  margin-left: 20%;
}
.passwordLabel {
  color: black;
  font-size: 14px;
  font-weight: 100px;
  margin-right: 90%;
}
.password {
  width: 80%;
  padding: 12px;
}

.termsLabel {
  margin-right: 35%;
  color: black;
  font-size: 20px;
  font-weight: 100px;
}
.termsLabels {
  margin-left: 10%;
}

.form-check-input[type="checkbox"] {
  border-color: blue;
}

.headwrapper1 {
  margin-top: 60px;
}
.headwrapper {
  text-align: justify;
}
.headpara {
  text-align: justify;
  margin-top: 5px;
}

.headwrapper1 {
  margin-top: 60px;
}
.headwrapper {
  text-align: justify;
}
.headpara {
  text-align: justify;
  margin-top: 5px;
}

.clientcount {
  justify-content: space-between;

  font-size: 32px;
}
.clientCountNumber1::after {
  content: "";
  display: block;
  height: 3px;
  width: 45%;
  background-color: blue;

  margin-top: 8%;
}
.clientCountNumber2::after {
  content: "";
  display: block;
  height: 3px;
  width: 45%;
  background-color: blue;

  margin-top: 8%;
}
.clientCountNumber3::after {
  content: "";
  display: block;
  height: 3px;
  width: 45%;
  background-color: blue;

  margin-top: 8%;
}
.clientCountNumber4::after {
  content: "";
  display: block;
  height: 3px;
  width: 45%;
  background-color: blue;

  margin-top: 8%;
}
@media (max-width: 575.98px) {
  .clientCountNumber1::after {
    content: "";
    display: block;
    height: 3px;
    width: 45%;
    background-color: blue;
    margin-left: 25%;

    margin-top: 8%;
  }
  .clientCountNumber2::after {
    content: "";
    display: block;
    height: 3px;
    width: 45%;
    background-color: blue;
    margin-left: 25%;
    margin-top: 8%;
  }
  .clientCountNumber3::after {
    content: "";
    display: block;
    height: 3px;
    width: 45%;
    background-color: blue;
    margin-left: 25%;
    margin-top: 8%;
  }
  .clientCountNumber4::after {
    content: "";
    display: block;
    height: 3px;
    width: 45%;
    background-color: blue;
    margin-left: 25%;
    margin-top: 8%;
  }
  .clientcount {
    text-align: center;
  }
  .clientCountNumber1 {
    font-size: 30px;

    font-weight: 350;
  }

  .clientCountLetter1 {
    font-size: 35px !important;
    font-weight: 350;
  }
  .clientCountNumber2 {
    font-size: 30px;

    font-weight: 350;
  }

  .clientCountLetter2 {
    font-size: 35px !important;
    font-weight: 350;
  }
  .clientCountNumber3 {
    font-size: 35px;

    font-weight: 350;
  }

  .clientCountLetter3 {
    font-size: 30px !important;
    font-weight: 350;
  }
  .clientCountNumber4 {
    font-size: 35px;

    font-weight: 350;
  }

  .clientCountLetter4 {
    font-size: 30px !important;
    font-weight: 350;
  }
  .navBg {
    background-color: #0a0d13;

    z-index: 999;
    padding: 15px 0;

    position: fixed;
    width: 100%;
  }
  .registerPage {
    box-sizing: border-box;
    width: 90%;
    height: 100%;
    margin-left: 4%;

    border: 2px solid white;
    border-radius: 5%;
    background-color: white;

    font-family: "Poppins", sans-serif;
    font-family: "Raleway", sans-serif;
  }
  .headpara ul li {
    font-size: 15px !important;
  }
  .headSign {
    color: black;
  }
  .invalid-tooltip {
    color: red;
    background-color: white !important;
    font-size: 8px !important;
  }
  .firstNameLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-left: 13% !important;
  }
  .firstName {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .form-control ::placeholder {
    font-size: 5px !important;
  }
  .firstNameError {
    margin-left: 20%;
  }
  .lastNameLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-right: 44% !important;
  }
  .lastName {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }

  .dateLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-left: 13% !important;
  }
  .date {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .dateError {
    margin-left: 20%;
  }

  .emailLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-right: 80% !important;
  }
  .email {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .mobileNumberLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-left: 13% !important;
  }
  .mobileNumber {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .mobileError {
    margin-left: 20%;
  }

  .cityLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-right: 80% !important;
  }
  .city {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .stateLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-left: 13% !important;
    margin-top: 20% !important;
  }
  .state {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .stateError {
    margin-left: 20%;
  }
  .zipLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-right: 80% !important;
    margin-top: 20% !important;
  }
  .zip {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .userNameLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-left: 13% !important;
  }
  .userName {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .userNameError {
    margin-left: 20%;
  }
  .passwordLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-right: 80% !important;
  }
  .password {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }

  .termsLabel {
    margin-right: 25% !important;
    color: black;
    font-size: 15px !important;
    font-weight: 100px;
  }
  .termsLabels {
    margin-left: 10%;
  }

  .form-check-input[type="checkbox"] {
    border-color: blue;
  }
}
//Signin
import React from "react";
import "./Signin.css";
import { Container } from "react-bootstrap";

import Button from "react-bootstrap/Button";
import Col from "react-bootstrap/Col";
import Form from "react-bootstrap/Form";

import Row from "react-bootstrap/Row";
import * as formik from "formik";
import * as yup from "yup";
import axios from "axios";
import { Link, useNavigate } from "react-router-dom";

const Courses = () => {
  const navigate = useNavigate();
  const handleSubmit = async (values, { setSubmitting }) => {
    try {
      const response = await axios.post("http://localhost:3300/login", values);
      console.log("API Response:", response.data);
      navigate("/Users");
    } catch (error) {
      console.error("API Error:", error);
    } finally {
      setSubmitting(false);
    }
  };
  const { Formik } = formik;

  const schema = yup.object().shape({
    userName: yup.string().required(),
    password: yup.string().required(),
  });

  return (
    <div>
      <div className="headbg">
        <Container className="headwrapper1">
          <Row>
            <Col lg={6} className="order-2 order-lg-1">
              <div className="headwrapper">
                <h1 className="mt-5">Tech Career Programs</h1>

                <p className="headpara">
                  <ul>
                    <li className="fs-3 mb-2">100% Job Placement Support.</li>
                    <li className="fs-3 mb-2">
                      Mentors from Top Global Product companies.
                    </li>
                    <li className="fs-3 mb-2">
                      A Portfolio of Real-world Projects.
                    </li>
                    <li className="fs-3 mb-2">
                      Globally Recognized Certification.
                    </li>
                  </ul>
                </p>
                <h3>Live Classes available in English, தமிழ்</h3>
                <div className="clientcount">
                  <Row className="gy-4">
                    <Col className="col-xs-6 col-sm-3 col-lg-3 ">
                      <div>
                        <p className="clientCountNumber1">
                          2000<sup>+</sup>
                        </p>

                        <p className="fs-5 clientCountLetter1">Students</p>
                      </div>
                    </Col>

                    <Col className="col-xs-6 col-sm-3 col-lg-3">
                      <div>
                        <p className="clientCountNumber2">
                          10<sup>+</sup>
                        </p>

                        <p className="fs-5 clientCountLetter2">Courses</p>
                      </div>
                    </Col>

                    <Col className="col-xs-6 col-sm-3 col-lg-3">
                      <div>
                        <p className="clientCountNumber3">
                          30<sup>+</sup>
                        </p>

                        <p className="fs-5 clientCountLetter3">Staffs</p>
                      </div>
                    </Col>

                    <Col className="col-xs-6 col-sm-3 col-lg-3">
                      <div>
                        <p className="clientCountNumber4">
                          30000<sup>+</sup>
                        </p>

                        <p className="fs-5 clientCountLetter4">
                          Students Placed
                        </p>
                      </div>
                    </Col>
                  </Row>
                </div>
              </div>
            </Col>
            <Col lg={6} className="order-1 order-lg-2">
              <div className="registerPages ms-5">
                <Formik
                  className="form"
                  validationSchema={schema}
                  onSubmit={handleSubmit}
                  initialValues={{
                    userName: "",
                    password: "",
                  }}
                >
                  {({
                    handleSubmit,
                    handleChange,
                    values,
                    touched,
                    errors,
                  }) => (
                    <Form noValidate onSubmit={handleSubmit}>
                      <h1 className="headSign mt-2"> Signin</h1>
                      <Form.Group
                        as={Col}
                        controlId="validationFormik105"
                        className="position-relative"
                      >
                        <Form.Label className="userNameLabels mb-2">
                          UserName
                        </Form.Label>
                        <Form.Control
                          type="text"
                          placeholder="Username"
                          name="userName"
                          value={values.userName}
                          onChange={handleChange}
                          isValid={touched.userName && !errors.userName}
                          isInvalid={!!errors.userName}
                          className="userName"
                          id="userName"
                        />
                      </Form.Group>
                      <Form.Group
                        as={Col}
                        controlId="validationFormik105"
                        className="position-relative"
                      >
                        <Form.Label className="passwordLabels mb-2">
                          Password
                        </Form.Label>
                        <Form.Control
                          type="password"
                          placeholder="Password"
                          name="password"
                          value={values.password}
                          onChange={handleChange}
                          isInvalid={!!errors.password}
                          isValid={touched.password && !errors.password}
                          className="password"
                          id="password"
                        />
                      </Form.Group>
                      <Button type="submit" className=" registerBtn mt-2">
                        Signin
                      </Button>
                      <h5 className="mt-3 text-black">Let's Signin</h5>{" "}
                      <Link to="/Courses" type="submit" className=" ">
                        Register
                      </Link>{" "}
                    </Form>
                  )}
                </Formik>
              </div>
            </Col>
          </Row>
        </Container>
      </div>
    </div>
  );
};

export default Courses;
//Sign.css
/* Head Content */

.headwrapper1 {
  margin-top: 60px;
}

.headbg {
  background-image: url("../img/bg13.jpg");

  width: 100%;
  min-height: 60vh;
  background-color: var(--color-secondary);
  background-size: cover;
  background-position: center;
  position: relative;
  padding: 120px 0 60px 0;
  color: rgba(255, 255, 255, 0.8);
}

/* registerPage */
.headSign {
  color: black;
  font-size: 20px;
}
.invalid-tooltip {
  color: red;
  background-color: white !important;
}

.registerPages {
  box-sizing: border-box;
  width: 80%;
  height: 85%;

  border: 2px solid white;
  border-radius: 5%;
  background-color: white;

  font-family: "Poppins", sans-serif;
  font-family: "Raleway", sans-serif;
  margin-top: 10%;
}
.registerBtn {
  width: 30%;
}

.userNameLabels {
  color: black;
  font-size: 14px;
  font-weight: 100px;
  margin-right: 75%;
}
#userName {
  width: 80%;
  padding: 12px;
  margin-left: 5%;
}

.passwordLabels {
  color: black;
  font-size: 14px;
  font-weight: 100px;
  margin-right: 75%;
}
#password {
  width: 80%;
  padding: 12px;
  margin-left: 5%;
}

.form-check-input[type="checkbox"] {
  border-color: blue;
}

.headwrapper1 {
  margin-top: 60px;
}
.headwrapper {
  text-align: justify;
}
.headpara {
  text-align: justify;
  margin-top: 5px;
}

.headwrapper1 {
  margin-top: 60px;
}
.headwrapper {
  text-align: justify;
}
.headpara {
  text-align: justify;
  margin-top: 5px;
}

.clientcount {
  justify-content: space-between;

  font-size: 32px;
}
.clientCountNumber1::after {
  content: "";
  display: block;
  height: 3px;
  width: 45%;
  background-color: blue;

  margin-top: 8%;
}
.clientCountNumber2::after {
  content: "";
  display: block;
  height: 3px;
  width: 45%;
  background-color: blue;

  margin-top: 8%;
}
.clientCountNumber3::after {
  content: "";
  display: block;
  height: 3px;
  width: 45%;
  background-color: blue;

  margin-top: 8%;
}
.clientCountNumber4::after {
  content: "";
  display: block;
  height: 3px;
  width: 45%;
  background-color: blue;

  margin-top: 8%;
}
@media (max-width: 575.98px) {
  .clientCountNumber1::after {
    content: "";
    display: block;
    height: 3px;
    width: 45%;
    background-color: blue;
    margin-left: 25%;

    margin-top: 8%;
  }
  .clientCountNumber2::after {
    content: "";
    display: block;
    height: 3px;
    width: 45%;
    background-color: blue;
    margin-left: 25%;
    margin-top: 8%;
  }
  .clientCountNumber3::after {
    content: "";
    display: block;
    height: 3px;
    width: 45%;
    background-color: blue;
    margin-left: 25%;
    margin-top: 8%;
  }
  .clientCountNumber4::after {
    content: "";
    display: block;
    height: 3px;
    width: 45%;
    background-color: blue;
    margin-left: 25%;
    margin-top: 8%;
  }
  .clientcount {
    text-align: center;
  }
  .clientCountNumber1 {
    font-size: 30px;

    font-weight: 350;
  }

  .clientCountLetter1 {
    font-size: 35px !important;
    font-weight: 350;
  }
  .clientCountNumber2 {
    font-size: 30px;

    font-weight: 350;
  }

  .clientCountLetter2 {
    font-size: 35px !important;
    font-weight: 350;
  }
  .clientCountNumber3 {
    font-size: 35px;

    font-weight: 350;
  }

  .clientCountLetter3 {
    font-size: 30px !important;
    font-weight: 350;
  }
  .clientCountNumber4 {
    font-size: 35px;

    font-weight: 350;
  }

  .clientCountLetter4 {
    font-size: 30px !important;
    font-weight: 350;
  }
  .navBg {
    background-color: #0a0d13;

    z-index: 999;
    padding: 15px 0;

    position: fixed;
    width: 100%;
  }
  .registerPage {
    box-sizing: border-box;
    width: 90%;
    height: 100%;
    margin-left: 4%;

    border: 2px solid white;
    border-radius: 5%;
    background-color: white;

    font-family: "Poppins", sans-serif;
    font-family: "Raleway", sans-serif;
  }
  .headpara ul li {
    font-size: 15px !important;
  }
  .headSign {
    color: black;
  }
  .invalid-tooltip {
    color: red;
    background-color: white !important;
    font-size: 8px !important;
  }
  .firstNameLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-left: 13% !important;
  }
  .firstName {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .form-control ::placeholder {
    font-size: 5px !important;
  }
  .firstNameError {
    margin-left: 20%;
  }
  .lastNameLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-right: 44% !important;
  }
  .lastName {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }

  .dateLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-left: 13% !important;
  }
  .date {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .dateError {
    margin-left: 20%;
  }

  .emailLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-right: 80% !important;
  }
  .email {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .mobileNumberLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-left: 13% !important;
  }
  .mobileNumber {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .mobileError {
    margin-left: 20%;
  }

  .cityLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-right: 80% !important;
  }
  .city {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .stateLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-left: 13% !important;
    margin-top: 20% !important;
  }
  .state {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .stateError {
    margin-left: 20%;
  }
  .zipLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-right: 80% !important;
    margin-top: 20% !important;
  }
  .zip {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .userNameLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-left: 13% !important;
  }
  .userName {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }
  .userNameError {
    margin-left: 20%;
  }
  .passwordLabel {
    color: black;
    font-size: 15px !important;
    font-weight: 50px !important;
    margin-right: 80% !important;
  }
  .password {
    border-color: blue;
    width: 80%;
    padding: 6px !important;
  }

  .termsLabel {
    margin-right: 25% !important;
    color: black;
    font-size: 15px !important;
    font-weight: 100px;
  }
  .termsLabels {
    margin-left: 10%;
  }

  .form-check-input[type="checkbox"] {
    border-color: blue;
  }
}
//User.js
import React from "react";
import "./Users.css";

import "bootstrap/dist/css/bootstrap.min.css";
import { Container, Col, Row } from "react-bootstrap";

import { Link } from "react-router-dom";

const Home = () => {
  return (
    <div>
      {/* Head Content */}
      <Link to="/signin" type="submit" className="logOut">
        Logout
      </Link>
      <div className="headbg">
        <Container className="headwrapper1">
          <Row>
            <Col lg={6} className="order-2 order-lg-1">
              <div className="headwrapper">
                <h1>Tech Career Programs</h1>

                <p className="headpara">
                  <ul>
                    <li>100% Job Placement Support.</li>
                    <li>Mentors from Top Global Product companies.</li>
                    <li>A Portfolio of Real-world Projects.</li>
                    <li>Globally Recognized Certification.</li>
                  </ul>
                </p>
                <h3>Live Classes available in English, தமிழ்</h3>
                <div className="clientcount">
                  <Row className="gy-4">
                    <Col className="col-xs-6 col-sm-3 col-lg-3 ">
                      <div>
                        <p className="clientCountNumber1">
                          2000<sup>+</sup>
                        </p>

                        <p className="fs-5 clientCountLetter1">Students</p>
                      </div>
                    </Col>

                    <Col className="col-xs-6 col-sm-3 col-lg-3">
                      <div>
                        <p className="clientCountNumber2">
                          10<sup>+</sup>
                        </p>

                        <p className="fs-5 clientCountLetter2">Courses</p>
                      </div>
                    </Col>

                    <Col className="col-xs-6 col-sm-3 col-lg-3">
                      <div>
                        <p className="clientCountNumber3">
                          30<sup>+</sup>
                        </p>

                        <p className="fs-5 clientCountLetter3">Staffs</p>
                      </div>
                    </Col>

                    <Col className="col-xs-6 col-sm-3 col-lg-3">
                      <div>
                        <p className="clientCountNumber4">
                          30000<sup>+</sup>
                        </p>

                        <p className="fs-5 clientCountLetter4">
                          Students Placed
                        </p>
                      </div>
                    </Col>
                  </Row>
                </div>
              </div>
            </Col>
            <Col lg={6} className="order-1 order-lg-2">
              <div className="heroimg">
                <img src="./assets/img_sm_11.jpg" alt="bg" />
              </div>
            </Col>
          </Row>
        </Container>
      </div>
    </div>
  );
};

export default Home;

//Users.css
/* Head Content */

.logOut {
  position: fixed;
  top: 2%;
  left: 80%;
  z-index: 999;
  text-decoration: none;

  font-size: 18px;
  padding-top: 1.2rem;
  padding-bottom: 1.2rem;
  padding-left: 20px;
  padding-right: 20px;
  font-weight: 400;
  color: #e6e6e6;

  opacity: 1 !important;
}
.headwrapper1 {
  margin-top: 60px;
}
.headwrapper {
  text-align: justify;
}
.headpara {
  text-align: justify;
  margin-top: 5px;
}

.headwrapper1 {
  margin-top: 60px;
}
.headwrapper {
  text-align: justify;
}
.headpara {
  text-align: justify;
  margin-top: 5px;
}

.headbg {
  background-image: url("../img/bg13.jpg");

  width: 100%;
  min-height: 60vh;
  background-color: var(--color-secondary);
  background-size: cover;
  background-position: center;
  position: relative;
  padding: 120px 0 60px 0;
  color: rgba(255, 255, 255, 0.8);
}

.heroimg img {
  width: 500px;
  margin-left: 68px;
}

.clientcount {
  justify-content: space-between;

  font-size: 32px;
}
.clientCountNumber1::after {
  content: "";
  display: block;
  height: 3px;
  width: 45%;
  background-color: blue;

  margin-top: 8%;
}
.clientCountNumber2::after {
  content: "";
  display: block;
  height: 3px;
  width: 45%;
  background-color: blue;

  margin-top: 8%;
}
.clientCountNumber3::after {
  content: "";
  display: block;
  height: 3px;
  width: 45%;
  background-color: blue;

  margin-top: 8%;
}
.clientCountNumber4::after {
  content: "";
  display: block;
  height: 3px;
  width: 45%;
  background-color: blue;

  margin-top: 8%;
}
@media (max-width: 575.98px) {
  .heroimg img {
    width: 300px;
    text-align: center;
    margin-bottom: 100px;
    margin-left: 10px;
  }
  .clientCountNumber1::after {
    content: "";
    display: block;
    height: 3px;
    width: 45%;
    background-color: blue;
    margin-left: 25%;

    margin-top: 8%;
  }
  .clientCountNumber2::after {
    content: "";
    display: block;
    height: 3px;
    width: 45%;
    background-color: blue;
    margin-left: 25%;
    margin-top: 8%;
  }
  .clientCountNumber3::after {
    content: "";
    display: block;
    height: 3px;
    width: 45%;
    background-color: blue;
    margin-left: 25%;
    margin-top: 8%;
  }
  .clientCountNumber4::after {
    content: "";
    display: block;
    height: 3px;
    width: 45%;
    background-color: blue;
    margin-left: 25%;
    margin-top: 8%;
  }
  .clientcount {
    text-align: center;
  }
  .clientCountNumber1 {
    font-size: 30px;

    font-weight: 350;
  }

  .clientCountLetter1 {
    font-size: 35px !important;
    font-weight: 350;
  }
  .clientCountNumber2 {
    font-size: 30px;

    font-weight: 350;
  }

  .clientCountLetter2 {
    font-size: 35px !important;
    font-weight: 350;
  }
  .clientCountNumber3 {
    font-size: 35px;

    font-weight: 350;
  }

  .clientCountLetter3 {
    font-size: 30px !important;
    font-weight: 350;
  }
  .clientCountNumber4 {
    font-size: 35px;

    font-weight: 350;
  }

  .clientCountLetter4 {
    font-size: 30px !important;
    font-weight: 350;
  }
}

@media (min-width: 768px) and (max-width: 991.98px) {
  .heroimg img {
    margin-bottom: 30px;
    text-align: center;
  }
}

@media (min-width: 992px) and (max-width: 1199.98px) {
  .heroimg img {
    margin-bottom: 30px;
    text-align: center;
    width: 410px;
  }
}

/* TransportIcon */
/* Icon1 */
.icon1 {
  font-size: 50px;
  text-align: justify;

  color: blue;
}
.contenthead1 {
  text-align: start;
  margin-left: 71px;
  margin-top: -57px;
}
.content1 {
  text-align: justify;
  margin-left: 72px;
  margin-top: -19px;
}
.contenticon1 {
  text-align: justify;
  margin-left: 69px;
}

/* Icon2 */

.icon2 {
  font-size: 50px;
  text-align: justify;

  color: blue;
}
.contenthead2 {
  text-align: start;
  margin-left: 71px;
  margin-top: -57px;
}
.content2 {
  text-align: justify;
  margin-left: 72px;
  margin-top: -19px;
}
.contenticon2 {
  text-align: justify;
  margin-left: 69px;
}
/* Icon3 */
.icon3 {
  font-size: 50px;
  text-align: justify;

  color: blue;
}
.contenthead3 {
  text-align: start;
  margin-left: 71px;
  margin-top: -57px;
}
.content3 {
  text-align: left;
  margin-left: 72px;
  margin-top: -19px;
}
.contenticon3 {
  text-align: justify;
  margin-left: 69px;
}

/* TransportContent */
@media (max-width: 575.98px) {
  .icon1 {
    font-size: 65px;
    text-align: justify;

    color: blue;
  }
  .contenthead1 {
    text-align: start;
    margin-left: 84px;
    margin-top: -76px;
  }
  .content1 {
    text-align: start;
    margin-left: 87px;
    margin-top: -19px;
  }
  .contenticon1 {
    text-align: justify;
    margin-left: 84px;
  }
  .icon2 {
    font-size: 65px;
    text-align: justify;

    color: blue;
  }
  .contenthead2 {
    text-align: start;
    margin-left: 95px;
    margin-top: -74px;
  }
  .content2 {
    text-align: start;
    margin-left: 96px;
    margin-top: -19px;
  }
  .contenticon2 {
    text-align: justify;
    margin-left: 69px;
  }
  .icon3 {
    font-size: 65px;
    text-align: justify;

    color: blue;
  }
  .contenthead3 {
    text-align: start;
    margin-left: 90px;
    margin-top: -63px;
  }
  .content3 {
    text-align: start;
    margin-left: 90px;
    margin-top: -19px;
  }
  .contenticon3 {
    text-align: justify;
    margin-left: 88px;
  }
}

/* About Content */

.aboutwrapper {
  text-align: justify;
  color: blue;
}
.aboutparawrapper {
  text-align: justify;
}
.diagram {
  text-align: justify;
  font-size: 40px;
  color: blue;
}
.diagramwrappercontentheading1 {
  text-align: justify;
  margin-left: 51px;
  margin-top: -40px;
}
.diagramwrappercontentheadingpara1 {
  text-align: justify;
  margin-left: 50px;
}

.glitboximage {
  width: 1000px;
  height: 500px;
}

@media (max-width: 575.98px) {
  .glitboximage {
    width: 800px;
    height: 300px;
  }
}

@media (min-width: 992px) and (max-width: 1199.98px) {
  .glitboximage {
    width: 1000px;
    height: 600px;
  }
}

/* Cart */

.servicepara {
  color: blue;
  font-size: 50px;
  margin-top: -59px;
}
.servicehead {
  margin-top: 50px;
}
.servicehead::after {
  content: "";
  display: block;
  height: 3px;
  width: 10%;
  margin-left: 45%;

  background-color: blue;
}

.cardImg {
  overflow: hidden;
}

.cardImg:hover {
  transition: ease-in 0.2s;
  left: 0;
  right: 0;
  top: 32px;
  bottom: 0;
  transform: scale(1.1);
}

@media (max-width: 575.98px) {
  .card {
    width: 308px;
  }
  .card1 {
    margin-left: 31px;
  }
  .card2 {
    margin-left: 31px;
  }
  .card3 {
    margin-left: 31px;
  }
  .card4 {
    margin-left: 31px;
  }
  .card5 {
    margin-left: 31px;
  }
  .card6 {
    margin-left: 31px;
  }
}

@media (min-width: 768px) and (max-width: 991.98px) {
  .packageCart {
    margin-top: -436px;
  }

  .wareHouseCard {
    position: absolute;
    width: 300px;
    right: 55px;
    top: 3750px;
  }
}

@media (min-width: 992px) and (max-width: 1199.98px) {
  .card {
    width: 300px;
  }
  .glitboximage {
    width: 1000px;
    height: 600px;
  }
}

/* Call To Action */
.bgImageCenter {
  margin-top: 20px;
  background: linear-gradient(rgba(14, 29, 52, 0.6), rgba(14, 29, 52, 0.8)) 0%
      0% / cover,
    url("../../../public/assets/img_sm_20.jpg") center center;
  padding: 100px 0px;
}

.bgImageCenterhaed {
  color: rgb(255, 255, 255);
  font-size: 28px;
  font-weight: 700;
}

.buttonCall {
  font-family: var(--font-primary);
  font-weight: 500;
  font-size: 16px;
  letter-spacing: 1px;
  display: inline-block;
  padding: 12px 40px;
  border-radius: 5px;

  margin: 10px;
  border: 2px solid rgb(255, 255, 255);
  background: var(--color-primary);

  color: rgb(255, 255, 255);
}
.buttonCall:hover {
  background: blue;
}

/* feature 1 */
.feature {
  margin-top: 80px;
}
.imgfeature {
  margin-top: 5%;
  height: 100px;
}
.imgfeaturehead {
  text-align: justify;

  font-weight: 600;
  font-size: 26px;
  color: rgb(0, 25, 115);
  margin-left: -60px;
  margin-top: 20px;
}
.imgfeaturepara {
  text-align: justify;
  margin-left: -60px;
}

.check {
  color: blue;
  font-weight: 30px;
  font-size: 25px;
}
@media (max-width: 575.98px) {
  .imgfeature {
    width: 100% !important;
  }
  .imgfeaturehead {
    text-align: justify;

    font-weight: 600;
    font-size: 18px;
    color: rgb(0, 25, 115);
    margin-left: -7px;
    margin-top: 21px;
  }
  .imgfeaturepara {
    text-align: justify;
    margin-left: -7px;
  }
}
@media (min-width: 768px) and (max-width: 991.98px) {
  .imgfeature {
    width: 100% !important;
  }
  .imgfeaturehead {
    text-align: justify;

    font-weight: 600;
    font-size: 20px;
    color: rgb(0, 25, 115);
    margin-left: 1px;
    margin-top: 21px;
  }
  .imgfeaturepara {
    text-align: justify;
    margin-left: -5px;
  }
}

@media (min-width: 992px) and (max-width: 1199.98px) {
  .imgfeature {
    width: 100% !important;
  }
  .imgfeaturehead {
    text-align: justify;

    font-weight: 600;
    font-size: 20px;
    color: rgb(0, 25, 115);
    margin-left: 1px;
    margin-top: 21px;
  }
  .imgfeaturepara {
    text-align: justify;
    margin-left: -5px;
  }
}
@media (min-width: 1200px) and (max-width: 1399.98px) {
  .imgfeature {
    width: 100% !important;
    margin-top: 50px;
  }
  .imgfeaturehead {
    text-align: justify;

    font-weight: 600;
    font-size: 20px;
    color: rgb(0, 25, 115);
    margin-left: 10px;
    margin-top: 21px;
  }
  .imgfeaturepara {
    text-align: justify;
    margin-left: -7px;
  }
}

/* feature 2 */
.feature2 {
  margin-top: 80px;
}
.feature2Content {
  margin-top: 80px;
}
.imgfeaturehead2 {
  text-align: justify;

  font-weight: 600;
  font-size: 26px;
  color: rgb(0, 25, 115);
  margin-left: 60px;
  margin-top: -11%;
}
.imgfeaturepara2 {
  text-align: justify;
  margin-left: 60px;
}
.imgfeature2 {
  width: 100% !important;
}
@media (max-width: 575.98px) {
  .feature2 {
    margin-top: 80px;
  }
  .feature2Content {
    margin-top: 500px;
  }
  .imgfeaturehead2 {
    text-align: justify;

    font-weight: 600;
    font-size: 26px;
    color: rgb(0, 25, 115);
    margin-left: -196px;
    margin-top: -230px;
  }
  .imgfeaturepara2 {
    text-align: justify;
    margin-left: -199px;
  }
  .imgfeature2 {
    width: 212% !important;
  }
}
@media (min-width: 768px) and (max-width: 991.98px) {
  .feature2 {
    margin-top: 80px;
  }
  .feature2Content {
    margin-top: 750px;
  }
  .imgfeaturehead2 {
    text-align: justify;

    font-weight: 600;
    font-size: 26px;
    color: rgb(0, 25, 115);
    margin-left: -364px;
    margin-top: -230px;
  }
  .imgfeaturepara2 {
    text-align: justify;
    margin-left: -360px;
  }
  .imgfeature2 {
    width: 212% !important;
  }
}

@media (min-width: 992px) and (max-width: 1199.98px) {
  .imgfeature2 {
    width: 100% !important;
    margin-top: 100px;
  }
}
@media (max-width: 575.98px) {
  .feature2 {
    margin-top: 80px;
  }
  .feature2Content {
    margin-top: 500px;
  }
  .imgfeaturehead2 {
    text-align: justify;

    font-weight: 600;
    font-size: 26px;
    color: rgb(0, 25, 115);
    margin-left: -196px;
    margin-top: -230px;
  }
  .imgfeaturepara2 {
    text-align: justify;
    margin-left: -199px;
  }
  .imgfeature2 {
    width: 212% !important;
  }
}
@media (min-width: 768px) and (max-width: 991.98px) {
  .feature2 {
    margin-top: 80px;
  }
  .feature2Content {
    margin-top: 750px;
  }
  .imgfeaturehead2 {
    text-align: justify;

    font-weight: 600;
    font-size: 26px;
    color: rgb(0, 25, 115);
    margin-left: -364px;
    margin-top: -230px;
  }
  .imgfeaturepara2 {
    text-align: justify;
    margin-left: -360px;
  }
  .imgfeature2 {
    width: 212% !important;
  }
}

@media (min-width: 992px) and (max-width: 1199.98px) {
  .imgfeature2 {
    width: 100% !important;
    margin-top: 100px;
  }
}
@media (min-width: 1200px) and (max-width: 1399.98px) {
}

/* feature 3 */
.imgfeature3 {
  margin-top: 6%;
}
.feature3 {
  margin-top: 80px;
}
.imgfeaturehead3 {
  text-align: justify;

  font-weight: 600;
  font-size: 26px;
  color: rgb(0, 25, 115);
  margin-left: -60px;
  margin-top: 20px;
}
.imgfeaturepara3 {
  text-align: justify;
  margin-left: -60px;
}

.check {
  color: blue;
  font-weight: 30px;
  font-size: 25px;
}

@media (max-width: 575.98px) {
  .imgfeature3 {
    width: 212% !important;
  }
  .feature3 {
    margin-top: 80px;
  }
  .imgfeaturehead3 {
    text-align: justify;

    font-weight: 600;
    font-size: 20px;
    color: rgb(0, 25, 115);
    margin-left: -191px;
    margin-top: 267px;
  }
  .imgfeaturepara3 {
    text-align: justify;
    margin-left: -194px;
  }

  .check {
    color: blue;
    font-weight: 30px;
    font-size: 25px;
  }
}
@media (min-width: 768px) and (max-width: 991.98px) {
  .imgfeature3 {
    width: 212% !important;
  }
  .feature3 {
    margin-top: 80px;
  }
  .imgfeaturehead3 {
    text-align: justify;

    font-weight: 600;
    font-size: 26px;
    color: rgb(0, 25, 115);
    margin-left: -365px;
    margin-top: 517px;
  }
  .imgfeaturepara3 {
    text-align: justify;
    margin-left: -364px;
  }

  .check {
    color: blue;
    font-weight: 30px;
    font-size: 25px;
  }
}

@media (min-width: 992px) and (max-width: 1199.98px) {
  .imgfeature3 {
    width: 80% !important;
    margin-top: 28px;
  }
}

@media (max-width: 575.98px) {
  .imgfeature3 {
    width: 212% !important;
  }
  .feature3 {
    margin-top: 80px;
  }
  .imgfeaturehead3 {
    text-align: justify;

    font-weight: 600;
    font-size: 20px;
    color: rgb(0, 25, 115);
    margin-left: -191px;
    margin-top: 267px;
  }
  .imgfeaturepara3 {
    text-align: justify;
    margin-left: -194px;
  }

  .check {
    color: blue;
    font-weight: 30px;
    font-size: 25px;
  }
}
@media (min-width: 768px) and (max-width: 991.98px) {
  .imgfeature3 {
    width: 212% !important;
  }
  .feature3 {
    margin-top: 80px;
  }
  .imgfeaturehead3 {
    text-align: justify;

    font-weight: 600;
    font-size: 26px;
    color: rgb(0, 25, 115);
    margin-left: -365px;
    margin-top: 517px;
  }
  .imgfeaturepara3 {
    text-align: justify;
    margin-left: -364px;
  }

  .check {
    color: blue;
    font-weight: 30px;
    font-size: 25px;
  }
}

@media (min-width: 992px) and (max-width: 1199.98px) {
  .imgfeature3 {
    width: 80% !important;
    margin-top: 28px;
  }
}

/* feature 4 */

.imgfeature4 {
  margin-top: 10%;
}
.feature4 {
  margin-top: 80px;
}
.imgfeaturehead4 {
  text-align: justify;

  font-weight: 600;
  font-size: 26px;
  color: rgb(0, 25, 115);
  margin-left: 10%;
  margin-top: 20px;
}
.imgfeaturepara4 {
  text-align: justify;
  margin-left: 10%;
}

/* Media Query feature 4 */
@media (max-width: 575.98px) {
  .imgfeature4 {
    width: 212% !important;
  }
  .feature4 {
    margin-top: 80px;
  }
  .imgfeaturehead4 {
    text-align: justify;

    font-weight: 600;
    font-size: 20px;
    color: rgb(0, 25, 115);
    margin-left: -193px;
    margin-top: 267px;
  }
  .imgfeaturepara4 {
    text-align: justify;
    margin-left: -195px;
  }
}
@media (min-width: 768px) and (max-width: 991.98px) {
  .imgfeature4 {
    width: 212% !important;
  }
  .feature4 {
    margin-top: 80px;
  }
  .imgfeaturehead4 {
    text-align: justify;

    font-weight: 600;
    font-size: 20px;
    color: rgb(0, 25, 115);
    margin-left: -366px;
    margin-top: 517px;
  }
  .imgfeaturepara4 {
    text-align: justify;
    margin-left: -363px;
  }
}

/* feature 5*/
.feature5 {
  margin-top: 80px;
}
.imgfeature5 {
  margin-top: 5%;
  height: 100px;
}
.imgfeaturehead5 {
  text-align: justify;

  font-weight: 600;
  font-size: 26px;
  color: rgb(0, 25, 115);
  margin-left: -60px;
  margin-top: 20px;
}
.imgfeaturepara5 {
  text-align: justify;
  margin-left: -60px;
}

.check {
  color: blue;
  font-weight: 30px;
  font-size: 25px;
}
@media (max-width: 575.98px) {
  .imgfeature5 {
    width: 100% !important;
  }
  .imgfeaturehead5 {
    text-align: justify;

    font-weight: 600;
    font-size: 18px;
    color: rgb(0, 25, 115);
    margin-left: -7px;
    margin-top: 21px;
  }
  .imgfeaturepara5 {
    text-align: justify;
    margin-left: -7px;
  }
}
@media (min-width: 768px) and (max-width: 991.98px) {
  .imgfeature5 {
    width: 100% !important;
  }
  .imgfeaturehead5 {
    text-align: justify;

    font-weight: 600;
    font-size: 20px;
    color: rgb(0, 25, 115);
    margin-left: 1px;
    margin-top: 21px;
  }
  .imgfeaturepara5 {
    text-align: justify;
    margin-left: -5px;
  }
}

@media (min-width: 992px) and (max-width: 1199.98px) {
  .imgfeature5 {
    width: 100% !important;
  }
  .imgfeaturehead5 {
    text-align: justify;

    font-weight: 600;
    font-size: 20px;
    color: rgb(0, 25, 115);
    margin-left: 1px;
    margin-top: 21px;
  }
  .imgfeaturepara5 {
    text-align: justify;
    margin-left: -5px;
  }
}
@media (min-width: 1200px) and (max-width: 1399.98px) {
  .imgfeature5 {
    width: 100% !important;
    margin-top: 50px;
  }
  .imgfeaturehead5 {
    text-align: justify;

    font-weight: 600;
    font-size: 20px;
    color: rgb(0, 25, 115);
    margin-left: 10px;
    margin-top: 21px;
  }
  .imgfeaturepara5 {
    text-align: justify;
    margin-left: -7px;
  }
}

/* feature 6 */
.feature6 {
  margin-top: 80px;
}
.feature6Content {
  margin-top: 80px;
}
.imgfeaturehead6 {
  text-align: justify;

  font-weight: 600;
  font-size: 26px;
  color: rgb(0, 25, 115);
  margin-left: 60px;
  margin-top: -11%;
}
.imgfeaturepara6 {
  text-align: justify;
  margin-left: 60px;
}
.imgfeature6 {
  width: 100% !important;
  margin-top: 5%;
}
@media (max-width: 575.98px) {
  .feature6 {
    margin-top: 80px;
  }
  .feature6Content {
    margin-top: 500px;
  }
  .imgfeaturehead6 {
    text-align: justify;

    font-weight: 600;
    font-size: 26px;
    color: rgb(0, 25, 115);
    margin-left: -196px;
    margin-top: -230px;
  }
  .imgfeaturepara6 {
    text-align: justify;
    margin-left: -199px;
  }
  .imgfeature6 {
    width: 212% !important;
  }
}
@media (min-width: 768px) and (max-width: 991.98px) {
  .feature6 {
    margin-top: 80px;
  }
  .feature6Content {
    margin-top: 750px;
  }
  .imgfeaturehead6 {
    text-align: justify;

    font-weight: 600;
    font-size: 26px;
    color: rgb(0, 25, 115);
    margin-left: -364px;
    margin-top: -230px;
  }
  .imgfeaturepara6 {
    text-align: justify;
    margin-left: -360px;
  }
  .imgfeature6 {
    width: 212% !important;
  }
}

@media (min-width: 992px) and (max-width: 1199.98px) {
  .imgfeature6 {
    width: 100% !important;
    margin-top: 100px;
  }
}
@media (max-width: 575.98px) {
  .feature6 {
    margin-top: 80px;
  }
  .feature6Content {
    margin-top: 500px;
  }
  .imgfeaturehead6 {
    text-align: justify;

    font-weight: 600;
    font-size: 26px;
    color: rgb(0, 25, 115);
    margin-left: -196px;
    margin-top: -230px;
  }
  .imgfeaturepara6 {
    text-align: justify;
    margin-left: -199px;
  }
  .imgfeature6 {
    width: 212% !important;
  }
}
@media (min-width: 768px) and (max-width: 991.98px) {
  .feature6 {
    margin-top: 80px;
  }
  .feature6Content {
    margin-top: 750px;
  }
  .imgfeaturehead6 {
    text-align: justify;

    font-weight: 600;
    font-size: 26px;
    color: rgb(0, 25, 115);
    margin-left: -364px;
    margin-top: -230px;
  }
  .imgfeaturepara6 {
    text-align: justify;
    margin-left: -360px;
  }
  .imgfeature6 {
    width: 212% !important;
  }
}

@media (min-width: 992px) and (max-width: 1199.98px) {
  .imgfeature6 {
    width: 100% !important;
    margin-top: 100px;
  }
}
@media (min-width: 1200px) and (max-width: 1399.98px) {
}

/* Pricing */

.priceHead {
  font-size: 32px;
  font-weight: 700;

  color: rgb(0, 25, 115);

  position: relative;
  margin-top: 5%;
}
.priceHead::after {
  content: "";
  display: block;
  height: 3px;
  width: 10%;
  margin-left: 45%;

  background-color: blue;
}

.priceHead1 {
  font-size: 32px;
  font-weight: 700;

  color: rgb(0, 25, 115);

  position: relative;
  margin-top: 50px;
}
.priceHead1Para1 {
  font-size: 20px;
  width: 100%;
}

.freePlan1 {
  text-align: justify;
}
.priceHead2 {
  font-size: 32px;
  font-weight: 700;

  color: rgb(0, 25, 115);

  position: relative;
  margin-top: 50px;
}
.priceHead1Para2 {
  font-size: 20px;
}

.freePlan2 {
  text-align: justify;
}
.priceHead3 {
  font-size: 32px;
  font-weight: 700;

  color: rgb(0, 25, 115);

  position: relative;
  margin-top: 50px;
}
.priceHead1Para3 {
  font-size: 20px;
}

.freePlan3 {
  text-align: justify;
}
.paraButton1 {
  margin-left: 50px;
}
.paraButton2 {
  margin-left: 50px;
}
.paraButton3 {
  margin-left: 50px;
}

@media (max-width: 575.98px) {
  .priceHeadLine {
    color: blue;
    font-size: 30px;
  }
  /* 1 */
  .priceHead1 {
    font-size: 30px;
    font-weight: 700;
    text-align: justify;
    color: rgb(0, 25, 115);
    margin-left: -14%;
    position: relative;
    margin-top: 2%;
  }
  .dollar1 {
    font-size: 40px;
    margin-left: -46%;
  }
  .zero1 {
    font-size: 36px;
  }
  .month1 {
    font-size: 25px;
  }
  .priceHead1Para1 {
    font-size: 20px;
    margin-right: 90px;
    margin-top: -22px;
  }

  .freePlan1 {
    text-align: center;
  }

  .iconPara1 {
    font-size: 36px;
  }
  .paraButton1 {
    margin-left: -35%;
    margin-bottom: 27%;
  }

  /* 2 */

  .priceHead2 {
    font-size: 30px;
    font-weight: 700;
    text-align: justify;
    color: rgb(0, 25, 115);
    margin-left: -14%;
    position: relative;
    margin-top: 2%;
  }
  .dollar2 {
    font-size: 40px;
    margin-left: -46%;
  }
  .zero2 {
    font-size: 36px;
  }
  .month2 {
    font-size: 25px;
  }
  .priceHead1Para2 {
    font-size: 20px;
    margin-right: 90px;
    margin-top: -22px;
  }

  .freePlan2 {
    text-align: center;
  }

  .iconPara2 {
    font-size: 36px;
  }
  .paraButton2 {
    margin-left: -35%;
    margin-bottom: 27%;
  }

  /* 3 */

  .priceHead3 {
    font-size: 30px;
    font-weight: 700;
    text-align: justify;
    color: rgb(0, 25, 115);
    margin-left: -14%;
    position: relative;
    margin-top: 2%;
  }
  .dollar3 {
    font-size: 40px;
    margin-left: -46%;
  }
  .zero3 {
    font-size: 36px;
  }
  .month3 {
    font-size: 25px;
  }
  .priceHead1Para3 {
    font-size: 20px;
    margin-right: 90px;
    margin-top: -22px;
  }

  .freePlan3 {
    text-align: center;
  }

  .iconPara3 {
    font-size: 36px;
  }
  .paraButton3 {
    margin-left: -35%;
    margin-bottom: 27%;
  }
}

/* Testimonials */
.testimonials {
  border-radius: 50%;
  width: 250px;
  border: 6px solid rgba(255, 255, 255, 0.15);
}
.testimoialsBg {
  margin-top: 30px;

  content: "";

  inset: 0;
  background: rgba(14, 29, 52, 0.7);
  width: 2110px !important;
  height: 500px;
  opacity: 0.9;
}
.stars {
  color: yellowgreen;
}
.content {
  color: white;
}
.frequentHead {
  font-size: 32px;
  font-weight: 700;

  padding-bottom: 0;
  color: #001973;
  position: relative;
  z-index: 2;
  margin-bottom: 20px;
  padding-bottom: 20px;
  position: relative;
}
.paraFre {
  margin-top: -40px;
}

@media (max-width: 575.98px) {
  .testimonials {
    border-radius: 50%;
    width: 150px;
    border: 6px solid rgba(255, 255, 255, 0.15);
  }
  .testimoialsBg {
    margin-top: 30px;

    content: "";

    inset: 0;
    background: rgba(14, 29, 52, 0.7);
    width: 380px !important;
    height: 350px;
    opacity: 0.9;
  }
  .stars {
    color: yellowgreen;
  }
  .content {
    color: black;
  }
  .frequentHead {
    font-size: 32px;
    font-weight: 700;

    padding-bottom: 0;
    color: #001973;
    position: relative;
    z-index: 2;
    margin-bottom: 20px;
    padding-bottom: 20px;
    position: relative;
  }
  .paraFre {
    margin-top: -40px;
  }
}
@media (min-width: 575.98px) and (max-width: 768px) {
  .testimoialsBg {
    margin-top: 30px;

    content: "";

    inset: 0;
    background: rgba(14, 29, 52, 0.7);
    width: 720px !important;
    height: 250px;
    opacity: 0.9;
  }
}
@media (min-width: 768px) and (max-width: 991.98px) {
  .testimonials {
    border-radius: 50%;
    width: 220px;
    border: 6px solid rgba(255, 255, 255, 0.15);
  }
  .testimoialsBg {
    margin-top: 30px;

    content: "";

    inset: 0;
    background: rgba(14, 29, 52, 0.7);
    width: 720px !important;
    height: 250px;
    opacity: 0.9;
  }
  .stars {
    color: yellowgreen;
  }
  .content {
    color: black;
  }
  .frequentHead {
    font-size: 32px;
    font-weight: 700;

    padding-bottom: 0;
    color: #001973;
    position: relative;
    z-index: 2;
    margin-bottom: 20px;
    padding-bottom: 20px;
    position: relative;
  }
  .paraFre {
    margin-top: -40px;
  }
}

@media (min-width: 992px) and (max-width: 1199.98px) {
  .testimonials {
    border-radius: 50%;
    width: 250px;
    border: 6px solid rgba(255, 255, 255, 0.15);
  }
  .testimoialsBg {
    margin-top: 30px;

    content: "";

    inset: 0;
    background: rgba(14, 29, 52, 0.7);
    width: 1000px !important;
    height: 250px;
    opacity: 0.9;
  }
  .stars {
    color: yellowgreen;
  }
  .content {
    color: black;
  }
  .frequentHead {
    font-size: 32px;
    font-weight: 700;

    padding-bottom: 0;
    color: #001973;
    position: relative;
    z-index: 2;
    margin-bottom: 20px;
    padding-bottom: 20px;
    position: relative;
  }
  .paraFre {
    margin-top: -40px;
  }
}
@media (min-width: 1400px) {
  .testimoialsBg {
    margin-top: 30px;

    content: "";

    inset: 0;
    background: rgba(14, 29, 52, 0.7);
    width: 1500px;
    height: 500px;
    opacity: 0.9;
  }
}

.frequentHead::after {
  content: "";
  display: block;
  height: 3px;
  width: 10%;
  margin-left: 45%;
  margin-top: 2%;

  background-color: blue;
}

@media (min-width: 768px) and (max-width: 991.98px) {
  .frequentHead {
    margin-top: 210px !important;
  }
}

@media (min-width: 992px) and (max-width: 1199.98px) {
  .frequentHead {
    margin-top: 210px !important;
  }
}
//Header.js
import React from "react";
import "./Header.css";
import { Navbar, Nav, NavDropdown, Container, Col, Row } from "react-bootstrap";

const Header = () => {
  return (
    <div>
      <Navbar expand="lg" variant="dark" className="sticky-top  navBg">
        <Container>
          <Navbar.Brand href="#" className="logo">
            <Row>
              <Col>
                <img
                  src="/logo1.jpg"
                  alt="Logo"
                  height="60"
                  className="d-inline-block align-top"
                />
              </Col>
              <Col>
                <div className="logoHead1">Enlight</div>
                <div className="logoHead2">Educational Institution</div>
              </Col>
            </Row>
          </Navbar.Brand>

          <Navbar.Toggle aria-controls="collapsibleNavbar" />

          <Navbar.Collapse
            id="collapsibleNavbar"
            className="justify-content-end d-xl-block"
          >
            <div className="navBar">
              <Nav className="navbar-nav fs-5">
                <Nav.Link href="Home">Home</Nav.Link>
                <Nav.Link href="Courses">Register</Nav.Link>
                <Nav.Link href="#">Teachers</Nav.Link>
                <Nav.Link href="#">Events</Nav.Link>

                <NavDropdown title="Pages" id="basic-nav-dropdown">
                  <NavDropdown.Item href="#">About Us</NavDropdown.Item>
                  <NavDropdown.Item href="#">Gallery</NavDropdown.Item>
                  <NavDropdown.Item href="#">News</NavDropdown.Item>
                </NavDropdown>
                <Nav.Link href="Signin">Users</Nav.Link>
              </Nav>
            </div>
          </Navbar.Collapse>
        </Container>
      </Navbar>
    </div>
  );
};

export default Header;
//App.js
import "./App.css";
import "bootstrap/dist/css/bootstrap.min.css";
import "bootstrap-icons/font/bootstrap-icons.css";

import { BrowserRouter, Routes, Route } from "react-router-dom";

// components
import Header from "./Components/Header/Header";
import Home from "./Components/Home/Home";
import Courses from "./Components/Courses/Courses";
import Signin from "./Components/Signin/Signin";
import Users from "./Components/Users/Users";
import Footer from "./Components/Footer/Footer";

function App() {
  return (
    <div className="App">
      <Header />
      <BrowserRouter>
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/Home" element={<Home />} />
          <Route path="/Courses" element={<Courses />} />
          <Route path="/Signin" element={<Signin />} />
          <Route path="/Users" element={<Users />} />
          {/* <Route path="/Contact" element={<Contact />} />
          <Route path="/Get" element={<Get />} />   */}
        </Routes>
      </BrowserRouter>
      <Footer />
    </div>
  );
}

export default App;
//Server.js
import express from "express";
import mysql from "mysql";
import cors from "cors";
import jwt from "jsonwebtoken";
import bcrypt from "bcrypt";
import cookieParser from "cookie-parser";

const saltRounds = 10;

const app = express();
app.use(cors({ origin: "http://localhost:3000", credentials: true }));
app.use(express.json());
app.use(cookieParser());

// Database connection
const db = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "Anbu1995@",
  database: "register",
});

db.connect((err) => {
  if (err) {
    console.error("Database connection error:", err);
  } else {
    console.log("Database connection success");
  }
});

// Register user
app.post("/createUser", (req, res) => {
  const sql = "INSERT INTO registers SET ?";
  bcrypt.hash(req.body.password.toString(), saltRounds, (err, hash) => {
    if (err) {
      console.error("Error hashing password:", err);
      return res.status(500).json({ error: "Internal Server Error" });
    }

    const user = {
      firstName: req.body.firstName,
      lastName: req.body.lastName,
      date: req.body.date,
      email: req.body.email,
      mobileNumber: req.body.mobileNumber,
      city: req.body.city,
      state: req.body.state,
      zip: req.body.zip,
      userName: req.body.userName,
      password: hash,
    };

    db.query(sql, user, (err, result) => {
      if (err) {
        console.error("Database query error:", err);
        return res.status(500).json({ error: "Internal Server Error" });
      }

      return res.json(result);
    });
  });
});

// Login user
app.post("/login", (req, res) => {
  const sql = "SELECT * FROM registers WHERE userName = ?";

  db.query(sql, [req.body.userName], async (err, data) => {
    if (err) {
      console.error("Login error in server:", err);
      return res.status(500).json({ error: "Internal Server Error" });
    }

    if (data.length > 0) {
      try {
        const storedHashedPassword = data[0].password;

        if (storedHashedPassword) {
          const isPasswordValid = await bcrypt.compareSync(
            req.body.password.toString(),
            storedHashedPassword
          );

          if (isPasswordValid) {
            const token = jwt.sign(
              { userName: req.body.userName },
              "your_jwt_secret",
              { expiresIn: "1d" }
            );
            res.cookie("token", token);
            return res.json({ status: "Success" });
          } else {
            return res.status(401).json({ error: "Invalid password" });
          }
        } else {
          return res
            .status(500)
            .json({ error: "Stored password is missing or invalid" });
        }
      } catch (error) {
        console.error("Password compare error:", error);
        return res.status(500).json({ error: "Internal Server Error" });
      }
    } else {
      return res.status(404).json({ error: "User not found" });
    }
  });
});

const PORT = 3300;
app.listen(PORT, () => {
  console.log(`Server is listening on port ${PORT}`);
});

